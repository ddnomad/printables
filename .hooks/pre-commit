#!/usr/bin/env bash
set -euo pipefail

PROJECT_BASE_DIR="$(git rev-parse --show-toplevel)"
readonly PROJECT_BASE_DIR

readonly MODELS_DIR="${PROJECT_BASE_DIR}/models"
readonly SCRIPTS_DIR="${PROJECT_BASE_DIR}/scripts"
readonly VALID_BRANCH_RE="^(main|(dev\/[0-9a-z_]{3,})|(release\/[0-9a-z_]{3,}\/v[0-9]{1,}\.[0-9]{1,}\.[0-9]{1,}))$"


function validate_branch_name {
    local branch_name
    branch_name="$(git rev-parse --abbrev-ref HEAD)"

    # Check general branch name format
    if [[ ! "${branch_name}" =~ $VALID_BRANCH_RE ]]; then
        >&2 echo "Error: Invalid branch name: ${branch_name}"
        >&2 echo
        >&2 echo "Branch name must match the following regular expression:"
        >&2 echo
        >&2 echo -e "${VALID_BRANCH_RE}"

        exit 1
    fi

    # Check whether development or release branch name corresponds to an existing model directory
    if [[ "${branch_name}" =~ (dev|release)/* ]]; then
        local model_dir_name
        model_dir_name="$(cut -f 2 -d '/' <<< "${branch_name}")"

        local model_dir_path
        model_dir_path="${MODELS_DIR}/${model_dir_name}"

        if ! test -d "${model_dir_path}"; then
            >&2 echo "Error: Invalid branch name: ${branch_name}"
            >&2 echo
            >&2 echo "Development or release branch names must conform to the following format:"
            >&2 echo
            >&2 echo -e "(dev|release)/<EXISTING_MODEL_DIR>/vX.X.X"

            exit 1
        fi

        local version
        version="$(cut -f 3 -d '/' <<< "${branch_name}")"

        local changelog_file_path
        changelog_file_path="${model_dir_path}/CHANGELOG.md"

        local changelog
        changelog="$("${SCRIPTS_DIR}/get_changelog_section.sh" "${changelog_file_path}" "${version}")"

        if test -z "${changelog}"; then
            >&2 echo "Error: Invalid branch name: ${branch_name}"
            >&2 echo
            >&2 echo "Failed to find a changelog entry for version ${version} in the changelog file:"
            >&2 echo "${changelog_file_path}"
            >&2 echo
            >&2 echo 'Releases must have a changelog section that matches a release version'
            >&2 echo 'specified in the branch name.'

            exit 1
        fi
    fi
}


function main {
    validate_branch_name

    cargo make gen_models_images
    cargo make update_readme_models_table

    # Stage newly created / modified files
    git status -s | grep -v '^[DR].*' | cut -f3 -d' ' | xargs git add
    git status -s | grep '^R.*' | cut -f2 -d'>' | xargs git add &> /dev/null || :
}


main "$@"
